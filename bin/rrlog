#!/usr/bin/env php
<?php declare(strict_types=1);

$autoloaderPath = __DIR__ . '/../vendor/autoload.php';

if (!file_exists($autoloaderPath))
{
    echo "No autoloader has been built or configured. Please run composer.\n";
    echo "\n";
    echo "  composer install\n";

    die(1);
}

require $autoloaderPath;

use allejo\bzflag\networking\Packets\PacketInvalidException;
use allejo\bzflag\networking\Replay;
use Violet\StreamingJsonEncoder\StreamJsonEncoder;

if (count($argv) !== 2)
{
    echo "Usage:\n";
    echo sprintf("  %s <path to replay>\n", basename(__FILE__));

    die(1);
}

$replayFile = $argv[1];

if (!file_exists($replayFile))
{
    echo sprintf("File not found: %s\n", $replayFile);

    die(1);
}

try
{
    $replay = new Replay($replayFile);
}
catch (PacketInvalidException $e)
{
    echo "An invalid or corrupted replay file was given.\n";
    die(1);
}
finally
{
    $fileHandler = fopen($replayFile . '.json', 'wb');
    $encoder = new StreamJsonEncoder(
        $replay,
        function ($json) use ($fileHandler) {
            fwrite($fileHandler, $json);
        }
    );

    $encoder->setOptions(JSON_PRETTY_PRINT);
    $encoder->encode();

    fclose($fileHandler);
}

echo "Done!\n";
